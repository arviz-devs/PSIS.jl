name: CI
on:
  push:
    branches: [main]
    tags: [v*]
  pull_request:
  schedule:
    - cron: "0 0 * * *"

jobs:
  test:
    name: ${{ matrix.downgrade && 'Downgrade / ' || '' }}Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ matrix.num_threads }} threads
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - 'min'
          - 'lts'
          - '1'
          - 'pre'
        os: ['ubuntu-latest']
        downgrade: [false]
        num_threads: [2]
        include:
          - version: '1'
            os: 'ubuntu-latest'
            num_threads: 1
            downgrade: true
          - version: 'min'
            os: 'ubuntu-latest'
            num_threads: 2
            downgrade: true

    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: x64
      - uses: julia-actions/cache@v2
      - uses: julia-actions/julia-downgrade-compat@v1
        with:
          skip: LinearAlgebra,Printf,Statistics
        if: matrix.downgrade
      - uses: julia-actions/julia-buildpkg@latest
      - uses: julia-actions/julia-runtest@latest
        env:
          JULIA_NUM_THREADS: ${{ matrix.num_threads }}
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v5
        with:
          file: lcov.info
  docs:
    name: ${{ matrix.downgrade && 'Downgrade / ' || '' }}Documentation - Julia ${{ matrix.version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: ['1']
        downgrade: [false, true]
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
      - uses: julia-actions/cache@v2
      - uses: julia-actions/julia-downgrade-compat@v1.1
        with:
          skip: LinearAlgebra,Printf,PSIS,Statistics
          projects: ., docs
        if: matrix.downgrade
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-docdeploy@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ matrix.version == '1' && secrets.DOCUMENTER_KEY || '' }}
          GKSwstype: "100" # https://discourse.julialang.org/t/generation-of-documentation-fails-qt-qpa-xcb-could-not-connect-to-display/60988
